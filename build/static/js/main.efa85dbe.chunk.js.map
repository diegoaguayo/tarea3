{"version":3,"sources":["services/socket.js","Flights.js","Chat.js","Map.js","reportWebVitals.js","index.js"],"names":["socket","socketIOClient","path","Flights","useState","flights","setFlights","useEffect","on","data","JSON","stringify","onClick","console","log","emit","Chat","username","setUsername","LogIn","ChatLog","SendMessage","props","useForm","register","handleSubmit","reset","onSubmit","type","placeholder","name","msgs","setMsg","messagesList","map","msg","ShowMessage","oldArray","logMsg","style","border","date","message","value","Map","count","setCount","document","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.efa85dbe.chunk.js","sourcesContent":["import socketIOClient from \"socket.io-client\";\n\nexport const socket = socketIOClient(\"wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl/\", {\n        path: \"/flights\"\n      });","import React, { useEffect, useState, Component } from 'react';\nimport {socket} from \"./services/socket\";\n\nimport './App.css';\n\nexport default function Flights() {\n  const [flights, setFlights] = useState([]);\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    \n    socket.on(\"FLIGHTS\", data => {\n      setFlights(JSON.stringify(data));\n    });\n\n  }, []);\n\n  function getFlights() {\n    console.log(\"voy a solicitar los vuelos\");\n    socket.emit(\"FLIGHTS\")\n  }\n\n  return (\n    <div>\n      <p> INFORMACION DE LOS VUELOS </p>\n      <button onClick={() => getFlights()}>\n        Get Flights\n      </button>\n      {flights}\n    </div>\n    \n  );\n}\n\n\n//component chat recibe userrname\n//component mapa\n//component flights info\n","import React, { useEffect, useState, Component } from 'react';\nimport {socket} from \"./services/socket\";\nimport {useForm} from \"react-hook-form\";\n\n//component chat recibe userrname\n\nexport default function Chat() {\n\n    const [username, setUsername] = useState(\"guest\");\n  \n    return (\n      <div>\n        <p> CENTRO DE CONTROL </p>\n        <LogIn username={username} setUsername={setUsername}/>\n        <ChatLog/>\n        <SendMessage username={username}/>\n      </div>\n      \n    );\n  }\n\nfunction LogIn(props) {\n\n    const {register, handleSubmit, reset} = useForm();\n\n    const onSubmit = (data) => {\n       props.setUsername(data.username);\n       reset({});\n    }\n    return (\n        <div>\n            <p>Current username: {props.username}</p>\n\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <label>\n                Name:<br/>\n                <input type=\"text\" placeholder=\"username\" name=\"username\" {...register('username')} />\n                </label>\n                <input type=\"submit\"/>\n            </form>\n        </div>\n\n\n    )\n    \n}\n\nfunction ChatLog() {\n    const [msgs, setMsg] = useState([]);\n\n    function logMsg(data) {\n        setMsg( oldArray => [...oldArray, data])\n    }\n\n    const messagesList = msgs.map((msg) =>\n        <li>\n            <ShowMessage msg={msg}/>\n        </li>\n    );\n  \n    useEffect(() => {\n      socket.on(\"CHAT\", data => logMsg(data));\n    }, []);\n  \n    return (\n      <div>\n        <p>LOG MENSAJES:</p>\n        <ul>\n            {messagesList}\n        </ul>\n      </div>\n      \n    );\n}\n\nfunction ShowMessage({msg}) {\n    return (\n        <section style={{border: \"1px solid black\"}}>\n            Name: {msg.name} <br/>\n            Date: {msg.date} <br/>\n            Message: {msg.message}\n        </section>\n    );\n}\n\nfunction SendMessage(props) {\n    \n    const {register, handleSubmit, reset} = useForm();\n\n    const onSubmit = (data) => {\n        const msg = {name: props.username, message: data.message};\n        socket.emit(\"CHAT\", msg);\n        reset({});\n    }\n    return (\n        <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <label>\n                Message: <br/>\n                <textarea type=\"text\" placeholder=\"\" name=\"message\" {...register(\"message\")} />\n                </label>\n                <input type=\"submit\" value=\"Send\"/>\n            </form>\n        </div>\n\n\n    )\n    \n}\n\n","import React, { useEffect, useState, Component } from 'react';\nimport {socket} from \"./services/socket\";\n\n//component chat recibe userrname\n\nexport default function Map() {\n    const [flights, setFlights] = useState([]);\n    const [count, setCount] = useState(0);\n  \n    useEffect(() => {\n      socket.on(\"FLIGHTS\", data => {\n        setFlights(JSON.stringify(data));\n      });\n  \n      socket.on(\"POSITION\", data => {\n        setFlights(JSON.stringify(data));\n      });\n  \n      document.title = `You clicked ${count} times`;\n  \n    }, []);\n  \n    return (\n      <div>\n        <p>MAPA \"En vivo\"</p>\n        <button onClick={() => setCount(count + 1)}>\n          Click me\n        </button>\n      </div>\n      \n    );\n  }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Flights from './Flights';\nimport Chat from './Chat';\nimport Map from './Map';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Flights />\n    <Chat />\n    <Map />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}