{"version":3,"sources":["Flights.js","Chat.js","Map.js","reportWebVitals.js","index.js"],"names":["socket","socketIOClient","path","Flights","useState","flights","setFlights","useEffect","on","data","JSON","stringify","onClick","console","log","emit","Chat","count","setCount","Map","document","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6OAKMA,EAASC,IAAe,yDAA0D,CAClFC,KAAM,aAGG,SAASC,IACtB,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,GAAnC,6BAeA,OAbAG,qBAAU,WAERP,EAAOQ,GAAG,WAAW,SAAAC,GACnBH,EAAWI,KAAKC,UAAUF,SAG3B,IAQD,gCACE,4DACA,wBAAQG,QAAS,kBAPnBC,QAAQC,IAAI,mCACZd,EAAOe,KAAK,YAMV,yBAGCV,KC3BQ,SAASW,IACpB,MAA8BZ,mBAAS,IAAvC,mBAAgBE,GAAhB,WACA,EAA0BF,mBAAS,GAAnC,mBAAOa,EAAP,KAAcC,EAAd,KAiBA,OAfAX,qBAAU,WACR,IAAMP,EAASC,IAAe,yDAA0D,CACtFC,KAAM,aAERF,EAAOe,KAAK,WACZf,EAAOQ,GAAG,WAAW,SAAAC,GACnBH,EAAWI,KAAKC,UAAUF,OAG5BT,EAAOQ,GAAG,YAAY,SAAAC,GACpBH,EAAWI,KAAKC,UAAUF,SAG3B,IAGD,gCACE,oDACA,wBAAQG,QAAS,kBAAMM,EAASD,EAAQ,IAAxC,yBCtBO,SAASE,IACpB,MAA8Bf,mBAAS,IAAvC,mBAAgBE,GAAhB,WACA,EAA0BF,mBAAS,GAAnC,mBAAOa,EAAP,KAAcC,EAAd,KAmBA,OAjBAX,qBAAU,WACR,IAAMP,EAASC,IAAe,yDAA0D,CACtFC,KAAM,aAERF,EAAOe,KAAK,WACZf,EAAOQ,GAAG,WAAW,SAAAC,GACnBH,EAAWI,KAAKC,UAAUF,OAG5BT,EAAOQ,GAAG,YAAY,SAAAC,GACpBH,EAAWI,KAAKC,UAAUF,OAG5BW,SAASC,MAAT,sBAAgCJ,EAAhC,YAEC,IAGD,gCACE,+CACA,wBAAQL,QAAS,kBAAMM,EAASD,EAAQ,IAAxC,yBC7BR,IAYeK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC9B,EAAD,IACA,cAACa,EAAD,IACA,cAACG,EAAD,OAEFC,SAASc,eAAe,SAM1BZ,M","file":"static/js/main.594e4d0d.chunk.js","sourcesContent":["import React, { useEffect, useState, Component } from 'react';\nimport socketIOClient from \"socket.io-client\";\n\nimport './App.css';\n\nconst socket = socketIOClient(\"wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl/\", {\n      path: \"/flights\"\n    });\n\nexport default function Flights() {\n  const [flights, setFlights] = useState([]);\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    \n    socket.on(\"FLIGHTS\", data => {\n      setFlights(JSON.stringify(data));\n    });\n\n  }, []);\n\n  function getFlights() {\n    console.log(\"voy a solicitar los vuelos\");\n    socket.emit(\"FLIGHTS\")\n  }\n\n  return (\n    <div>\n      <p> INFORMACION DE LOS VUELOS </p>\n      <button onClick={() => getFlights()}>\n        Get Flights\n      </button>\n      {flights}\n    </div>\n    \n  );\n}\n\n\n//component chat recibe userrname\n//component mapa\n//component flights info\n","import React, { useEffect, useState, Component } from 'react';\nimport socketIOClient from \"socket.io-client\";\n\n//component chat recibe userrname\n\nexport default function Chat() {\n    const [flights, setFlights] = useState([]);\n    const [count, setCount] = useState(0);\n  \n    useEffect(() => {\n      const socket = socketIOClient(\"wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl/\", {\n        path: \"/flights\"\n      });\n      socket.emit(\"FLIGHTS\")\n      socket.on(\"FLIGHTS\", data => {\n        setFlights(JSON.stringify(data));\n      });\n  \n      socket.on(\"POSITION\", data => {\n        setFlights(JSON.stringify(data));\n      });\n  \n    }, []);\n  \n    return (\n      <div>\n        <p> CENTRO DE CONTROL </p>\n        <button onClick={() => setCount(count + 1)}>\n          Click me\n        </button>\n      </div>\n      \n    );\n  }","import React, { useEffect, useState, Component } from 'react';\nimport socketIOClient from \"socket.io-client\";\n\n//component chat recibe userrname\n\nexport default function Map() {\n    const [flights, setFlights] = useState([]);\n    const [count, setCount] = useState(0);\n  \n    useEffect(() => {\n      const socket = socketIOClient(\"wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl/\", {\n        path: \"/flights\"\n      });\n      socket.emit(\"FLIGHTS\")\n      socket.on(\"FLIGHTS\", data => {\n        setFlights(JSON.stringify(data));\n      });\n  \n      socket.on(\"POSITION\", data => {\n        setFlights(JSON.stringify(data));\n      });\n  \n      document.title = `You clicked ${count} times`;\n  \n    }, []);\n  \n    return (\n      <div>\n        <p>MAPA \"En vivo\"</p>\n        <button onClick={() => setCount(count + 1)}>\n          Click me\n        </button>\n      </div>\n      \n    );\n  }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Flights from './Flights';\nimport Chat from './Chat';\nimport Map from './Map';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Flights />\n    <Chat />\n    <Map />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}