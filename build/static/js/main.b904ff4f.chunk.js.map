{"version":3,"sources":["services/socket.js","Map.js","Flights.js","Chat.js","reportWebVitals.js","index.js"],"names":["socket","socketIOClient","path","Map","displacementsList","flights","map","flight","Displacement","code","useState","airplanePositions","setAirplanePositions","positionPoints","setPositionPoints","useEffect","on","data","oldArray","last_pos","position","new_pos","angleDeg","Math","atan2","PI","angle","logPositions","loggedPositions","PaintPosition","logAirplanePositions","Object","keys","key","DisplayAirplane","airplane","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","displacement","origin","destination","Circle","radius","Polyline","positions","color","myIcon","L","icon","iconUrl","iconSize","iconAnchor","size","Marker","Popup","Flights","setFlights","emit","flightList","onClick","id","ShowFlight","trigger","airline","seats","Chat","username","setUsername","LogIn","ChatLog","SendMessage","props","useForm","register","handleSubmit","reset","onSubmit","type","placeholder","name","value","msgs","setMsg","messagesList","msg","ShowMessage","logMsg","style","padding","border","Date","date","toUTCString","message","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b904ff4f.chunk.js","sourcesContent":["import socketIOClient from \"socket.io-client\";\n\nexport const socket = socketIOClient(\"wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl/\", {\n        path: \"/flights\"\n      });","import React, { useEffect, useState, Component } from 'react';\nimport {socket} from \"./services/socket\";\nimport leaflet, { MapContainer, TileLayer, Marker, Popup, Polyline, Circle} from 'react-leaflet'\nimport L from \"leaflet\";\n\nimport './Map.css';\n\nexport default function Map({flights}) {\n\n  const displacementsList = flights.map((flight) =>\n        <Displacement key={flight.code} flight={flight}/>\n  );\n\n  const [airplanePositions, setAirplanePositions] = useState({});\n\n  const [positionPoints, setPositionPoints] = useState([]);\n\n  useEffect(() => {\n    socket.on(\"POSITION\", data => {\n      logPositions(data);\n    });\n\n  }, []);\n\n  function logPositions(data) {\n    setPositionPoints( oldArray => [...oldArray, data])\n    var angle = 0;\n    if (airplanePositions[data.code]) {\n      const last_pos = airplanePositions[data.code].position\n      const new_pos = data.position\n      var angleDeg = Math.atan2(last_pos[0] - new_pos[0], last_pos[1] - new_pos[1]) * 180 / Math.PI;\n    }\n    airplanePositions[data.code] = {...data, angle: angleDeg};\n    setAirplanePositions({...airplanePositions});\n  }\n\n  const loggedPositions = positionPoints.map((flight) =>\n        <PaintPosition flight={flight}/>\n  );\n\n  const logAirplanePositions = Object.keys(airplanePositions).map((key) =>\n    <DisplayAirplane airplane={airplanePositions[key]}/>\n  );\n  \n    \n  \n\n  return (\n    <div>\n      <h2>MAPA \"En vivo\"</h2>\n      <h4>Hacer click sobre un avión para obtener su código</h4>\n        <MapContainer center={[-35,-65]} zoom={4} scrollWheelZoom={false}>\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          {logAirplanePositions}\n          {displacementsList}\n          {loggedPositions}\n        </MapContainer>\n    </div>\n      \n  );\n}\n\n\nfunction Displacement({flight}) {\n    const displacement = [flight.origin, flight.destination];\n    return (\n      <div>\n        <Circle center={flight.origin} radius={200} />\n        <Polyline positions={displacement} />\n        <Circle center={flight.destination} radius={1000} />\n      </div>\n    )\n  }\n\nfunction PaintPosition({flight}) {\n  return (\n    <Circle center={flight.position} color=\"grey\" radius={200} />\n  )\n}\n\nfunction DisplayAirplane({airplane}) {\n\n  const size = 35\n\n  const myIcon = L.icon({\n    iconUrl: 'https://upload.wikimedia.org/wikipedia/commons/c/c2/20_airtransportation.svg',\n    iconSize  : [size, size],\n    iconAnchor: [size/2, size/2],\n  });\n\n  return (\n    <Marker position={airplane.position} icon={myIcon}>\n            <Popup>\n              Code: {airplane.code}\n            </Popup>\n    </Marker>\n  )\n}\n","import React, { useEffect, useState, Component } from 'react';\nimport Popup from 'reactjs-popup';\nimport {socket} from \"./services/socket\";\nimport Map from './Map';\n\nimport 'reactjs-popup/dist/index.css';\n\n\nexport default function Flights() {\n  const [flights, setFlights] = useState([]);\n  const [flightsByCode, setFlightsByCode] = useState({});\n\n  useEffect(() => {\n    socket.emit(\"FLIGHTS\")\n    socket.on(\"FLIGHTS\", data => {\n      setFlights(data);\n    });\n\n  }, []);\n\n  function getFlights() {\n    socket.emit(\"FLIGHTS\")\n  }\n\n  const flightList = flights.map((flight) =>\n        <li>\n            <ShowFlight flight={flight}/>\n        </li>\n    );\n\n  return (\n    <div>\n      <Map flights={flights}/>\n      <button onClick={() => getFlights()}>\n        Refresh Flights\n      </button>\n      <h2> INFORMACIÓN DE LOS VUELOS </h2>\n      <ul id=\"sideList\">\n        {flightList}\n      </ul>\n    </div>\n  );\n}\n\nconst ShowFlight = ({flight}) => (\n  <Popup trigger={<button> {flight.code}</button>} position=\"right center\">\n    <div>\n      <h3>INFORMACIÓN DEL VUELO</h3>\n      <p>Code: {flight.code}</p>\n      <p>Airline: {flight.airline}</p>\n      <p>Origin: {flight.origin}</p>\n      <p>Destination: {flight.destination}</p>\n      <p>Number of seats: {flight.seats}</p>\n    </div>\n  </Popup>\n);\n\n\n\n//component chat recibe userrname\n//component mapa\n//component flights info\n","import React, { useEffect, useState, Component } from 'react';\nimport {socket} from \"./services/socket\";\nimport {useForm} from \"react-hook-form\";\n\n//component chat recibe userrname\n\nexport default function Chat() {\n\n    const [username, setUsername] = useState(\"guest\");\n  \n    return (\n      <div>\n        <h2> CENTRO DE CONTROL </h2>\n        <LogIn username={username} setUsername={setUsername}/>\n        <ChatLog/>\n        <SendMessage username={username}/>\n      </div>\n      \n    );\n  }\n\nfunction LogIn(props) {\n\n    const {register, handleSubmit, reset} = useForm();\n\n    const onSubmit = (data) => {\n       props.setUsername(data.username);\n       reset({});\n    }\n    return (\n        <div>\n            <h4>Nombre de usuario: <strong>{props.username}</strong></h4>\n\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <label>\n                Cambiar nombre de usuario:<br/>\n                <input type=\"text\" placeholder=\"\" name=\"username\" {...register('username')} />\n                </label>\n                <input type=\"submit\" value=\"Actualizar\"/>\n            </form>\n        </div>\n\n\n    )\n    \n}\n\nfunction ChatLog() {\n    const [msgs, setMsg] = useState([]);\n\n    function logMsg(data) {\n        setMsg( oldArray => [...oldArray, data])\n    }\n\n    const messagesList = msgs.map((msg) =>\n            <ShowMessage msg={msg}/>\n    );\n  \n    useEffect(() => {\n      socket.on(\"CHAT\", data => logMsg(data));\n    }, []);\n  \n    return (\n      <div>\n        <h4>LOG MENSAJES:</h4>\n            {messagesList}\n      </div>\n      \n    );\n}\n\nfunction ShowMessage({msg}) {\n    return (\n        <section style={{padding: \"10px\", border: \"1px solid black\"}}>\n            <strong>username: {msg.name} <br/></strong>\n            Date: {new Date(msg.date).toUTCString()} <br/>\n            <strong>Message: {msg.message}</strong>\n        </section>\n    );\n}\n\nfunction SendMessage(props) {\n    \n    const {register, handleSubmit, reset} = useForm();\n\n    const onSubmit = (data) => {\n        const msg = {name: props.username, message: data.message};\n        socket.emit(\"CHAT\", msg);\n        reset({});\n    }\n    return (\n        <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <label>\n                Mensaje: <br/>\n                <textarea type=\"text\" placeholder=\"\" name=\"message\" {...register(\"message\")} />\n                </label>\n                <input type=\"submit\" value=\"Enviar\"/>\n            </form>\n        </div>\n\n\n    )\n    \n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Flights from './Flights';\nimport Chat from './Chat';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div id=\"container\">\n      <div><Flights /></div>\n      <div><Chat    /></div>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}